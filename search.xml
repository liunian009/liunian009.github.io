<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python基础学习（一）</title>
      <link href="/2019/08/20/python-ji-chu-xue-xi-yi/"/>
      <url>/2019/08/20/python-ji-chu-xue-xi-yi/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1309439820&auto=1&height=66"></iframe></div><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><table><thead><tr><th>转义字符</th><th>含义</th></tr></thead><tbody><tr><td>\a</td><td>响铃（BEL）</td></tr><tr><td>\b</td><td>退格（BS），将当前位置移到前一列</td></tr><tr><td>\f</td><td>换页（FF），将当前位置移到下页开头</td></tr><tr><td>\n</td><td>换行（LF），将当前位置移到下一行开头</td></tr><tr><td>\r</td><td>回车（CR），将当前位置移到本行开头</td></tr><tr><td>\t</td><td>水平制表（HT）（跳到下一个TAB位置）</td></tr><tr><td>\v</td><td>垂直制表（VT）</td></tr><tr><td>\\\</td><td>代表一个反斜线字符“\”</td></tr><tr><td>\\’</td><td>代表一个单引号（撇号）字符</td></tr><tr><td>\\”</td><td>代表一个双引号字符</td></tr><tr><td>\？</td><td>代表一个问号</td></tr><tr><td>\0</td><td>空字符（NUL）</td></tr><tr><td>\ddd</td><td>1到3位八进制所代表的任意字符</td></tr><tr><td>\xhh</td><td>1到2位十六进制所代表的任意字符</td></tr></tbody></table><h2 id="print-函数"><a href="#print-函数" class="headerlink" title="print()函数"></a>print()函数</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#让计算机读懂括号里面的内容，打印最终结果</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>或者<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#让计算机无需理解，原样复述引号中的内容</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">'''这里是让输出内容照搬里面的，想换行直接换行'''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="end-’’函数"><a href="#end-’’函数" class="headerlink" title="end=’’函数"></a>end=’’函数</h3><p>参数’end’是用来控制换行行数和结尾字符</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'world'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">'  '</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'world'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">'!'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'world'</span><span class="token punctuation">)</span>以上输出结果：helloworldhello  worldhello!world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="绝对值"><a href="#绝对值" class="headerlink" title="绝对值"></a>绝对值</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> math<span class="token comment" spellcheck="true"># 方法1：条件判断</span><span class="token keyword">def</span> <span class="token function">abs_value1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> float<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'1.请输入一个数字：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> a <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> a    <span class="token keyword">else</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token operator">-</span>a    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'绝对值为：%f'</span> <span class="token operator">%</span> a<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方法2：内置函数 abs()</span><span class="token keyword">def</span> <span class="token function">abs_value2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> float<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'2.请输入一个数字：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> abs<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'绝对值为：%f'</span> <span class="token operator">%</span> a<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方法3：内置模块 math</span><span class="token keyword">def</span> <span class="token function">abs_value3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> float<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'3.请输入一个数字：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> math<span class="token punctuation">.</span>fabs<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'绝对值为：%f'</span> <span class="token operator">%</span> a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>基本类型：字符串-str；整数-int；浮点数-float<br>数据拼接：使用符号-‘+’<br>相关函数：str()-将其他类型转成字符串；int()-将其他类型转成整数；flont()-将其他类型转成浮点数  </p><h3 id="查找类型"><a href="#查找类型" class="headerlink" title="查找类型"></a>查找类型</h3><h4 id="type"><a href="#type" class="headerlink" title="type()"></a>type()</h4><p>用法：print(type(a))</p><h4 id="isinstance"><a href="#isinstance" class="headerlink" title="isinstance()"></a>isinstance()</h4><p>用法：isinstance(object, classinfo)<br>object – 实例对象。<br>classinfo – 可以是直接或间接类名、基本类型或者由它们组成的元组。</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">,</span><span class="token number">34.0</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">:</span>    <span class="token keyword">if</span> isinstance<span class="token punctuation">(</span>i<span class="token punctuation">,</span>float<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#输出34.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据拼接可用"><a href="#数据拼接可用" class="headerlink" title="数据拼接可用%"></a>数据拼接可用%</h3><table><thead><tr><th>格式符+类型码</th><th>含义</th></tr></thead><tbody><tr><td>%s</td><td>字符串显示</td></tr><tr><td>%f</td><td>浮点数显示</td></tr><tr><td>%d</td><td>整数显示</td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python">lucky <span class="token operator">=</span> <span class="token number">8</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我的幸运数字是%d'</span> <span class="token operator">%</span> lucky<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我的幸运数字是%d'</span> <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我的幸运数字是%s'</span> <span class="token operator">%</span> <span class="token string">'小龙女的生日816'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我的幸运数字是%d和%d'</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="格式化字符串format"><a href="#格式化字符串format" class="headerlink" title="格式化字符串format()"></a>格式化字符串format()</h3><p>用法：str.format()</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># format()格式化函数：str.format()</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n{}{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">'数字：'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 优势1：不用担心用错类型码。</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{}，{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 不设置指定位置时，默认按顺序对应。</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{1}，{0}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 优势2：当设置指定位置时，按指定的对应。</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{0}，{1}，{0}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 优势3：可多次调用format后的数据。</span>name2 <span class="token operator">=</span>  <span class="token string">'Python基础语法'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我正在学{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>name2<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># format()函数也接受通过参数传入数据。</span>以上输出结果：数字：<span class="token number">0</span><span class="token number">0</span>，<span class="token number">1</span><span class="token number">1</span>，<span class="token number">0</span><span class="token number">0</span>，<span class="token number">1</span>，<span class="token number">0</span>我正在学Python基础语法<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><table><thead><tr><th>运算符</th><th>例子</th></tr></thead><tbody><tr><td>+</td><td>2+1输出结果3</td></tr><tr><td>-</td><td>1-2输出结果-1</td></tr><tr><td>*</td><td>1*2输出结果2</td></tr><tr><td>/</td><td>1/2输出结果0.5</td></tr><tr><td>%</td><td>5%2输出结果1</td></tr><tr><td>**</td><td>2**3为2的3次方</td></tr><tr><td>//</td><td>11//2输出结果5</td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python">i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span> 可以写成i<span class="token operator">+=</span><span class="token number">1</span>i<span class="token operator">=</span>i<span class="token operator">*</span><span class="token number">1</span> 可以写成i<span class="token operator">*=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="查重set"><a href="#查重set" class="headerlink" title="查重set()"></a>查重set()</h3><p>可以把重复的元素删除</p><pre class="line-numbers language-python"><code class="language-python">l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'spam'</span><span class="token punctuation">,</span> <span class="token string">'spam'</span><span class="token punctuation">,</span> <span class="token string">'eggs'</span><span class="token punctuation">,</span> <span class="token string">'spam'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>set<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span>输出结果：<span class="token punctuation">{</span><span class="token string">'eggs'</span><span class="token punctuation">,</span> <span class="token string">'spam'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>list<span class="token punctuation">(</span>set<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>输出结果：<span class="token punctuation">[</span><span class="token string">'spam'</span><span class="token punctuation">,</span> <span class="token string">'eggs'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>个人总结，希望对你有帮助。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的基本操作</title>
      <link href="/2019/08/17/git-de-ji-ben-cao-zuo/"/>
      <url>/2019/08/17/git-de-ji-ben-cao-zuo/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div><h1 id="Git基本操作"><a href="#Git基本操作" class="headerlink" title="Git基本操作"></a>Git基本操作</h1><ul><li>提交做出更改后可在git Bash 输入$ git push origin master<h2 id="命令帮助"><a href="#命令帮助" class="headerlink" title="命令帮助"></a>命令帮助</h2></li><li>git help 列出所有git命令<h2 id="从github中拉取项目"><a href="#从github中拉取项目" class="headerlink" title="从github中拉取项目"></a>从github中拉取项目</h2></li><li>在终端输入git clone +链接即可<h2 id="从本地提交项目到github"><a href="#从本地提交项目到github" class="headerlink" title="从本地提交项目到github"></a>从本地提交项目到github</h2></li><li>在终端输入git push origin master<br>#origin是远程名字，git remote -v 能看到；master是分支名称git branch 能看到<h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2></li><li>$ mkdir learngit   #创建+名字  创建文件夹</li><li>$ cd learngit   #进入 </li><li>$ cd ..  #返回上一层</li><li>$ pwd   #显示当前所在位置</li><li>$ git ini #把这个目录变成Git可以管理的仓库</li><li>$ git init   #创建一个空的仓库</li><li>$ ll #查看当前文件夹文件内容</li><li>$ vim xxx.py #打开一个py文件编辑<h2 id="把文件放到版本库"><a href="#把文件放到版本库" class="headerlink" title="把文件放到版本库"></a>把文件放到版本库</h2></li><li>文件放在版本库文件夹里面</li><li>例如上面放到learngit目录下（子目录也行）</li><li>$ git add readme.txt #命令git把readme.txt添加到仓库</li><li>$ git commit -m “wrote a readme file” #git commit告诉Git，把文件提交到仓库“”里面的内容为备注<h2 id="git暂存"><a href="#git暂存" class="headerlink" title="git暂存"></a>git暂存</h2></li><li>$ git stash #暂存文件 </li><li>$ git stash apply #暂存文件的恢复</li><li>$ git stash list #暂存多次后用来进行查看的方法<h2 id="多种指令"><a href="#多种指令" class="headerlink" title="多种指令"></a>多种指令</h2></li><li>$ git status #查看当前状态</li><li>$ touch test.txt #创建文件，touch+文件</li><li>$ git add test.txt #添加进去，git add+文件</li><li>$ git log # 查看</li><li>$ git reset –hard HEAD #提交错了,回退</li><li>$ git branch #在git项目里面，显示项目的分支情况</li><li>$ git branch -d xxx  # git branc -d +分支名 ，删除分支</li><li>$ git branch xxx #git branch+分支名，添加新分支</li><li>$ git checkout xxx #git checkout+分支名，切换分支</li><li>$ git checkout -b xxx #git checkout -b +分支名，创建新分支并且切换过去</li><li>$ git merge xxx #git merge +分支名,合并分支</li></ul><p>个人总结，希望对你有帮助。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
